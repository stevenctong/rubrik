<#
.SYNOPSIS
This script is the main wrapper conversion script.

.DESCRIPTION
This script is the main wrapper conversion script.

Reads in the VMDK CSV file generated by "Get-RubrikVMDKList.ps1".
Converts any VMDKs marked with "Y" in the Notes column.

To-Do's:
1. Update "Download-RubrikVMDK.ps1" to handle multiple VMDKs from same VM
2. Parallelize the for loop
3. Error Checking
4. Logging

.NOTES
Written by Steven Tong for community usage
GitHub: stevenctong
Date: 6/6/25

Requirements:

.EXAMPLE
./Main-Conversion-Script.ps1 -csvInput <vmdk csv file>
  Reads in the CSV file and starts the conversion for all marked VMDKs

#>

param (
  [CmdletBinding()]
  # CSVInput
  [Parameter(Mandatory=$false)]
  [string]$csvInput = ''
)

$scriptDir = 'F:'
$downloadDir = 'F:'
$conversionDir = 'F:'

$date = Get-Date

$vmList = Import-CSV -Path $csvInput
$vmList = $vmList | Where-Object { $_.Notes -eq 'Y' }
$vmCount = $vmList.count

Write-Host "Found $vmCount vmdks to convert"

foreach ($vmdk in $vmList) {
  $vmdkFilename = Split-Path -Path $vmdk.vmdkFile -Leaf
  $filenameWithoutExtension = Split-Path -Path $vmdkFilename -LeafBase
  $vhdFilename = $filenameWithoutExtension + ".vhd"
  Write-Host "New Filename is: $newFilename"
  Write-Host "Processing VM: $($vmdk.Name) / $vmdkFilename ($($vmdk.vmdkSizeGiB) GiB), Recovery Point: $($vmdk.LatestBackupDate)"
  Write-Host "Target VHD will be: $vhdFilename"
  & $scriptDir\Download-RubrikVMDK.ps1 -vmID $vmdk.id -snapshotID $vmdk.LatestBackupID `
    -vmdkFileName $vmdk.vmdkFile -downloadPath $downloadDir
  & $scriptDir\Convert-VMDK-to-VHD.ps1 -sourceVMDK "$downloadDir\$vmdkFilename" `
    -targetVHD "$conversionDir\$vhdFilename"
  & $scriptDir\Upload-VHD-Create-AzureVM.ps1 -vmName $vmdk.Name `
    -sourceVHD "$conversionDir\$vhdFilename"
}
